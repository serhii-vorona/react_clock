{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","this","window","setInterval","setState","console","log","toLocaleTimeString","clearInterval","props","name","Component","App","hasClock","clockName","setRandomName","randomName","Math","random","toString","slice","visibleClock","hiddenClock","document","addEventListener","ReactDOM","render","getElementById"],"mappings":"6MAUaA,EAAb,4MACEC,MAAe,CACbC,KAAM,IAAIC,MAFd,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,IAAML,EAAS,EAAKD,MAAdC,KAENA,EAAO,IAAIC,KACX,EAAKK,SAAS,CAAEN,SAEhBO,QAAQC,IAAIR,EAAKS,wBAChB,OAfP,kCAkBE,WACEC,cAAcP,KAAKD,WAnBvB,oBAsBE,WACE,OACE,gCACE,iCAASC,KAAKQ,MAAMC,OACnB,YACAT,KAAKJ,MAAMC,KAAKS,4BA3BzB,GAA2BI,aCDrBC,E,4MACJf,MAAyB,CACvBgB,UAAU,EACVC,UAAW,W,EAQbC,cAAgBZ,aAAY,WAC1B,IAAMa,EAAaC,KAAKC,SAASC,WAAWC,MAAM,EAAG,GAErD,EAAKhB,SAAS,CAAEU,UAAU,SAAD,OAAWE,OACnC,K,EAEHK,aAAe,WACb,EAAKjB,SAAS,CAAES,UAAU,K,EAG5BS,YAAc,WACZ,EAAKlB,SAAS,CAAES,UAAU,K,uDAhB5B,WACEU,SAASC,iBAAiB,QAASvB,KAAKoB,cACxCE,SAASC,iBAAiB,cAAevB,KAAKqB,e,oBAiBhD,WACE,MAAgCrB,KAAKJ,MAA7BgB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAElB,OACE,gCACE,6CAEA,8BACE,8BAAOD,GAAY,cAAC,EAAD,CAAOH,KAAMI,e,GAjCxBH,aAwCHC,IC9Cfa,IAASC,OACP,cAAC,EAAD,IACAH,SAASI,eAAe,W","file":"static/js/main.0365df9a.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  name: string,\n};\n\ntype State = {\n  date: Date,\n};\n\nexport class Clock extends Component<Props, State> {\n  state: State = {\n    date: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      let { date } = this.state;\n\n      date = new Date();\n      this.setState({ date });\n      // eslint-disable-next-line\n      console.log(date.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    return (\n      <div>\n        <strong>{this.props.name}</strong>\n        {' time is '}\n        {this.state.date.toLocaleTimeString()}\n      </div>\n    );\n  }\n}\n","import './App.scss';\nimport { Component } from 'react';\nimport { Clock } from './components/Clock';\n\ntype State = {\n  clockName: string,\n  hasClock: boolean,\n};\n\nclass App extends Component<{}, State> {\n  state: Readonly<State> = {\n    hasClock: true,\n    clockName: 'Clock 1',\n  };\n\n  componentDidMount() {\n    document.addEventListener('click', this.visibleClock);\n    document.addEventListener('contextmenu', this.hiddenClock);\n  }\n\n  setRandomName = setInterval(() => {\n    const randomName = Math.random().toString().slice(2, 6);\n\n    this.setState({ clockName: `Clock ${randomName}` });\n  }, 3000);\n\n  visibleClock = () => {\n    this.setState({ hasClock: true });\n  };\n\n  hiddenClock = () => {\n    this.setState({ hasClock: false });\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div>\n        <h1>React clock</h1>\n\n        <div>\n          <div>{ hasClock && <Clock name={clockName} />}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}